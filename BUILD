licenses(["notice"])
exports_files(["LICENSES"])

cc_library(
    name = "cpprest",
    strip_include_prefix = "Release/include",
    include_prefix = "third_party",
    includes = ["Release/include"],
    hdrs = glob([
        "Release/include/cpprest/*.h",
        "Release/include/cpprest/details/*.h",
        "Release/include/cpprest/details/*.hpp",
        "Release/include/pplx/*.h",
        "Release/include/cpprest/*.dat",
        "Release/include/cpprest/details/*.dat",
    ]),
    srcs = glob([
        "Release/src/http/common/*",
        "Release/src/json/**",
        "Release/src/uri/**",
        "Release/src/utilities/*.cpp",
    ]) + [
        "Release/src/http/oauth/oauth1.cpp",
        "Release/src/http/oauth/oauth2.cpp",
        "Release/src/http/client/http_client.cpp",
        "Release/src/http/client/http_client_asio.cpp",
        "Release/src/http/client/http_client_impl.h",
        "Release/src/http/client/http_client_msg.cpp",
        "Release/src/http/client/x509_cert_utilities.cpp",
        "Release/src/http/listener/http_listener.cpp",
        "Release/src/http/listener/http_listener_msg.cpp",
        "Release/src/http/listener/http_server_api.cpp",
        "Release/src/http/listener/http_server_asio.cpp",
        "Release/src/http/listener/http_server_impl.h",
        "Release/src/pch/stdafx.h",
        "Release/src/pch/stdafx.cpp",
        "Release/src/pplx/pplx.cpp",
        "Release/src/pplx/threadpool.cpp",
        "Release/src/pplx/pplxlinux.cpp",
        "Release/src/streams/fileio_posix.cpp",
    ],
    copts = [
        "-Wno-unused",
        "-DCPPREST_FORCE_HTTP_CLIENT_ASIO",
        "-DCPPREST_EXCLUDE_BROTLI",
        "-DCPPREST_EXCLUDE_WEBSOCKETS",
        "-Ithird_party/cpprestsdk/Release/include",
        "-Ithird_party/cpprestsdk/Release/src/pch",
    ],
    linkopts = [
        "-lboost_filesystem",
        "-lboost_system",
        "-lboost_regex",
        "-lssl",
        "-lcrypto",
        "-pthread",
        "-ldl",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "cpprest_test",
    srcs = glob([
        "Release/tests/functional/http/client/*.cpp",
        "Release/tests/functional/http/client/*.h",
        "Release/tests/functional/http/listener/*.cpp",
        "Release/tests/functional/http/listener/*.h",
        "Release/tests/functional/http/utilities/*.cpp",
        "Release/tests/functional/http/utilities/*.h",
        "Release/tests/functional/http/utilities/include/*.h",
        "Release/tests/functional/json/*.cpp",
        "Release/tests/common/TestRunner/*.cpp",
        "Release/tests/common/TestRunner/*.h",
        "Release/tests/common/UnitTestpp/src/*.cpp",
        "Release/tests/common/UnitTestpp/src/*.h",
        "Release/tests/common/UnitTestpp/src/Posix/*",
        "Release/tests/common/UnitTestpp/*.h",
    ]) + [
        "Release/tests/common/utilities/os_utilities.cpp",
        "Release/tests/common/utilities/include/os_utilities.h",
        "Release/tests/common/utilities/include/locale_guard.h",
        "Release/tests/common/utilities/include/common_utilities_public.h",
        "Release/tests/functional/streams/fstreambuf_tests.cpp",
        "Release/tests/functional/streams/istream_tests.cpp",
        "Release/tests/functional/streams/memstream_tests.cpp",
        "Release/tests/functional/streams/ostream_tests.cpp",
        "Release/tests/functional/streams/stdstream_tests.cpp",
        "Release/tests/functional/streams/stdafx.cpp",
        "Release/tests/functional/streams/stdafx.h",
        "Release/tests/functional/streams/streams_tests.h",
    ],
    copts = [
        "-Ithird_party/cpprestsdk/Release/include",
        "-Ithird_party/cpprestsdk/Release/tests/common/UnitTestpp",
        "-Ithird_party/cpprestsdk/Release/tests/common/utilities/include",
        "-Ithird_party/cpprestsdk/Release/tests/functional/http/utilities/include",
        "-Wno-implicit-int-float-conversion",
        "-DCPPREST_FORCE_HTTP_CLIENT_ASIO",
        "-DCPPREST_EXCLUDE_BROTLI",
        "-DCPPREST_EXCLUDE_WEBSOCKETS",
    ],
    linkopts = [
        "-lm",
    ],
    deps = [
        ":cpprest",
    ],
)